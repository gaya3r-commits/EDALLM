Question,Verilog Code
Design a 2:1 Multiplexer in Verilog,"module mux2to1 (
    input wire a, b,
    input wire sel,
    output wire y
);
    assign y = sel ? b : a;
endmodule"
Design a 4:1 Multiplexer using `case` in Verilog,"module mux4to1 (
    input wire [3:0] in,
    input wire [1:0] sel,
    output reg out
);
    always @(*) begin
        case(sel)
            2'b00: out = in[0];
            2'b01: out = in[1];
            2'b10: out = in[2];
            2'b11: out = in[3];
        endcase
    end
endmodule"
Design a D Flip-Flop (positive edge-triggered),"module d_flip_flop (
    input wire clk,
    input wire d,
    output reg q
);
    always @(posedge clk) begin
        q <= d;
    end
endmodule"
Design a 3-bit Synchronous Counter,"module counter3bit (
    input wire clk,
    input wire rst,
    output reg [2:0] count
);
    always @(posedge clk or posedge rst) begin
        if (rst)
            count <= 3'b000;
        else
            count <= count + 1;
    end
endmodule"
Design an 8-bit Register with Enable,"module register8 (
    input wire clk,
    input wire en,
    input wire [7:0] d,
    output reg [7:0] q
);
    always @(posedge clk) begin
        if (en)
            q <= d;
    end
endmodule"
Design a 1-bit Full Adder,"module full_adder (
    input wire a, b, cin,
    output wire sum, cout
);
    assign sum = a ^ b ^ cin;
    assign cout = (a & b) | (b & cin) | (a & cin);
endmodule"
Design an 8-to-3 Priority Encoder,"module priority_encoder8 (
    input wire [7:0] in,
    output reg [2:0] out
);
    always @(*) begin
        casex (in)
            8'b1xxxxxxx: out = 3'b111;
            8'b01xxxxxx: out = 3'b110;
            8'b001xxxxx: out = 3'b101;
            8'b0001xxxx: out = 3'b100;
            8'b00001xxx: out = 3'b011;
            8'b000001xx: out = 3'b010;
            8'b0000001x: out = 3'b001;
            8'b00000001: out = 3'b000;
            default: out = 3'b000;
        endcase
    end
endmodule"
